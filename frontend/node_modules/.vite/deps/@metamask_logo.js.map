{
  "version": 3,
  "sources": ["../../@metamask/logo/data/fox.json", "../../gl-mat4/perspective.js", "../../gl-mat4/multiply.js", "../../gl-mat4/identity.js", "../../gl-mat4/lookAt.js", "../../gl-mat4/invert.js", "../../gl-mat4/rotate.js", "../../gl-vec3/transformMat4.js", "../../@metamask/logo/src/util.js", "../../@metamask/logo/src/index.js"],
  "sourcesContent": ["{\n  \"positions\": [\n    [111.024597, 52.604599, 46.225899],\n    [114.025002, 87.673302, 58.9818],\n    [66.192001, 80.898003, 55.394299],\n    [72.113297, 35.491798, 30.871401],\n    [97.804497, 116.560997, 73.978798],\n    [16.7623, 58.010899, 58.078201],\n    [52.608898, 30.3641, 42.556099],\n    [106.881401, 31.945499, 46.9133],\n    [113.484596, 38.6049, 49.121498],\n    [108.6633, 43.2332, 46.315399],\n    [101.216599, 15.9822, 46.308201],\n    [16.6605, -16.2883, 93.618698],\n    [40.775002, -10.2288, 85.276398],\n    [23.926901, -2.5103, 86.736504],\n    [11.1691, -7.0037, 99.377602],\n    [9.5692, -34.393902, 141.671997],\n    [12.596, 7.1655, 88.740997],\n    [61.180901, 8.8142, 76.996803],\n    [39.719501, -28.927099, 88.963799],\n    [13.7962, -68.575699, 132.057007],\n    [15.2674, -62.32, 129.688004],\n    [14.8446, -52.6096, 140.113007],\n    [12.8917, -49.771599, 144.740997],\n    [35.604198, -71.758003, 81.063904],\n    [47.462502, -68.606102, 63.369701],\n    [38.2486, -64.730202, 38.909901],\n    [-12.8917, -49.771599, 144.740997],\n    [-13.7962, -68.575699, 132.057007],\n    [17.802099, -71.758003, 81.063904],\n    [19.1243, -69.0168, 49.420101],\n    [38.2486, -66.275597, 17.776199],\n    [12.8928, -36.703499, 141.671997],\n    [109.283997, -93.589897, 27.824301],\n    [122.117996, -36.8894, 35.025002],\n    [67.7668, -30.197001, 78.417801],\n    [33.180698, 101.851997, 25.3186],\n    [9.4063, -35.589802, 150.722],\n    [-9.5692, -34.393902, 141.671997],\n    [-9.4063, -35.589802, 150.722],\n    [11.4565, -37.899399, 150.722],\n    [-12.596, 7.1655, 88.740997],\n    [-11.1691, -7.0037, 99.377602],\n    [70.236504, 62.836201, -3.9475],\n    [47.263401, 54.293999, -27.414801],\n    [28.7302, 91.731102, -24.972601],\n    [69.167603, 6.5862, -12.7757],\n    [28.7302, 49.1003, -48.3596],\n    [31.903, 5.692, -47.821999],\n    [35.075802, -34.432899, -16.280899],\n    [115.284103, 48.681499, 48.684101],\n    [110.842796, 28.4821, 49.176201],\n    [-19.1243, -69.0168, 49.420101],\n    [-38.2486, -66.275597, 17.776199],\n    [-111.024597, 52.604599, 46.225899],\n    [-72.113297, 35.491798, 30.871401],\n    [-66.192001, 80.898003, 55.394299],\n    [-114.025002, 87.673302, 58.9818],\n    [-97.804497, 116.560997, 73.978798],\n    [-52.608898, 30.3641, 42.556099],\n    [-16.7623, 58.010899, 58.078201],\n    [-106.881401, 31.945499, 46.9133],\n    [-108.6633, 43.2332, 46.315399],\n    [-113.484596, 38.6049, 49.121498],\n    [-101.216599, 15.9822, 46.308201],\n    [-16.6605, -16.2883, 93.618698],\n    [-23.926901, -2.5103, 86.736504],\n    [-40.775002, -10.2288, 85.276398],\n    [-61.180901, 8.8142, 76.996803],\n    [-39.719501, -28.927099, 88.963799],\n    [-14.8446, -52.6096, 140.113007],\n    [-15.2674, -62.32, 129.688004],\n    [-47.462502, -68.606102, 63.369701],\n    [-35.604198, -71.758003, 81.063904],\n    [-38.2486, -64.730202, 38.909901],\n    [-17.802099, -71.758003, 81.063904],\n    [-12.8928, -36.703499, 141.671997],\n    [-67.7668, -30.197001, 78.417801],\n    [-122.117996, -36.8894, 35.025002],\n    [-109.283997, -93.589897, 27.824301],\n    [-33.180698, 101.851997, 25.3186],\n    [-11.4565, -37.899399, 150.722],\n    [-70.236504, 62.836201, -3.9475],\n    [-28.7302, 91.731102, -24.972601],\n    [-47.263401, 54.293999, -27.414801],\n    [-69.167603, 6.5862, -12.7757],\n    [-28.7302, 49.1003, -48.3596],\n    [-31.903, 5.692, -47.821999],\n    [-35.075802, -34.432899, -16.280899],\n    [-115.284103, 48.681499, 48.684101],\n    [-110.842796, 28.4821, 49.176201]\n  ],\n  \"chunks\": [\n    {\n      \"color\": [119, 57, 0],\n      \"faces\": [\n        [0, 1, 2],\n        [2, 3, 0],\n        [4, 5, 2],\n        [6, 3, 2],\n        [2, 5, 6],\n        [7, 8, 9],\n        [10, 3, 6],\n        [10, 50, 7],\n        [7, 3, 10],\n        [7, 9, 3],\n        [49, 0, 9],\n        [3, 9, 0],\n        [53, 54, 55],\n        [55, 56, 53],\n        [57, 56, 55],\n        [58, 59, 55],\n        [55, 54, 58],\n        [60, 61, 62],\n        [63, 58, 54],\n        [63, 60, 89],\n        [60, 63, 54],\n        [60, 54, 61],\n        [88, 61, 53],\n        [54, 53, 61],\n        [2, 1, 4],\n        [55, 59, 57]\n      ],\n      \"materialName\": \"fox:ears\"\n    },\n    {\n      \"color\": [36, 51, 67],\n      \"faces\": [\n        [11, 12, 13],\n        [64, 65, 66]\n      ],\n      \"materialName\": \"fox:eyes\"\n    },\n    {\n      \"color\": [228, 116, 36],\n      \"faces\": [\n        [14, 15, 11],\n        [11, 16, 14],\n        [17, 12, 18],\n        [41, 64, 37],\n        [67, 68, 66]\n      ],\n      \"materialName\": \"fox:orange_shade_light\"\n    },\n    {\n      \"color\": [192, 172, 157],\n      \"faces\": [\n        [19, 20, 21],\n        [21, 22, 19],\n        [20, 19, 23],\n        [23, 24, 20],\n        [23, 25, 24],\n        [19, 22, 26],\n        [26, 27, 19],\n        [23, 28, 29],\n        [23, 29, 30],\n        [25, 23, 30],\n        [29, 51, 52],\n        [52, 30, 29],\n        [27, 26, 69],\n        [69, 70, 27],\n        [70, 71, 72],\n        [72, 27, 70],\n        [72, 71, 73],\n        [51, 74, 72],\n        [52, 51, 72],\n        [73, 52, 72],\n        [19, 27, 74],\n        [74, 28, 19],\n        [51, 29, 28],\n        [28, 74, 51],\n        [74, 27, 72],\n        [28, 23, 19]\n      ],\n      \"materialName\": \"fox:white_underside\"\n    },\n    {\n      \"color\": [214, 194, 178],\n      \"faces\": [\n        [21, 20, 24],\n        [24, 31, 21],\n        [69, 71, 70],\n        [71, 69, 75]\n      ],\n      \"materialName\": \"fox:white_side\"\n    },\n    {\n      \"color\": [228, 119, 25],\n      \"faces\": [\n        [31, 24, 18],\n        [6, 5, 16],\n        [16, 17, 6],\n        [24, 32, 33],\n        [33, 34, 24],\n        [5, 4, 35],\n        [75, 68, 71],\n        [58, 67, 40],\n        [40, 59, 58],\n        [71, 76, 77],\n        [77, 78, 71]\n      ],\n      \"materialName\": \"fox:orange_mid_1\"\n    },\n    {\n      \"color\": [205, 98, 0],\n      \"faces\": [\n        [24, 34, 18],\n        [16, 13, 12],\n        [12, 17, 16],\n        [13, 16, 11],\n        [71, 68, 76],\n        [40, 67, 66],\n        [66, 65, 40],\n        [65, 64, 40]\n      ],\n      \"materialName\": \"fox:orange_shade_dark\"\n    },\n    {\n      \"color\": [0, 0, 0],\n      \"faces\": [\n        [36, 15, 37],\n        [37, 38, 36],\n        [31, 39, 22],\n        [22, 21, 31],\n        [31, 15, 36],\n        [36, 39, 31],\n        [75, 69, 26],\n        [26, 80, 75],\n        [75, 80, 38],\n        [38, 37, 75],\n        [38, 80, 39],\n        [39, 36, 38],\n        [39, 80, 26],\n        [26, 22, 39]\n      ],\n      \"materialName\": \"fox:nose\"\n    },\n    {\n      \"color\": [247, 132, 25],\n      \"faces\": [\n        [17, 33, 10],\n        [17, 18, 34],\n        [34, 33, 17],\n        [10, 6, 17],\n        [11, 15, 31],\n        [31, 18, 11],\n        [18, 12, 11],\n        [14, 16, 40],\n        [40, 41, 14],\n        [59, 5, 35],\n        [35, 79, 59],\n        [67, 63, 77],\n        [67, 77, 76],\n        [76, 68, 67],\n        [63, 67, 58],\n        [64, 68, 75],\n        [75, 37, 64],\n        [68, 64, 66],\n        [14, 41, 37],\n        [37, 15, 14],\n        [5, 59, 40],\n        [40, 16, 5]\n      ],\n      \"materialName\": \"fox:orange_light\"\n    },\n    {\n      \"color\": [225, 119, 25],\n      \"faces\": [\n        [35, 4, 42],\n        [4, 1, 42],\n        [42, 43, 44],\n        [44, 35, 42],\n        [45, 43, 42],\n        [42, 10, 45],\n        [30, 32, 24],\n        [24, 25, 30],\n        [30, 33, 32],\n        [33, 30, 10],\n        [44, 43, 46],\n        [43, 45, 47],\n        [47, 46, 43],\n        [48, 47, 45],\n        [45, 30, 48],\n        [30, 45, 10],\n        [49, 42, 0],\n        [8, 7, 42],\n        [50, 42, 7],\n        [50, 10, 42],\n        [1, 0, 42],\n        [42, 9, 8],\n        [42, 49, 9],\n        [64, 41, 40],\n        [57, 59, 79],\n        [79, 81, 57],\n        [57, 81, 56],\n        [82, 79, 35],\n        [35, 44, 82],\n        [81, 79, 82],\n        [82, 83, 81],\n        [84, 63, 81],\n        [81, 83, 84],\n        [44, 46, 85],\n        [85, 82, 44],\n        [52, 73, 71],\n        [71, 78, 52],\n        [52, 78, 77],\n        [77, 63, 52],\n        [82, 85, 83],\n        [83, 85, 86],\n        [86, 84, 83],\n        [87, 52, 84],\n        [84, 86, 87],\n        [52, 63, 84],\n        [88, 53, 81],\n        [62, 81, 60],\n        [89, 60, 81],\n        [89, 81, 63],\n        [56, 81, 53],\n        [81, 62, 61],\n        [81, 61, 88],\n        [48, 87, 86],\n        [86, 47, 48],\n        [47, 86, 85],\n        [85, 46, 47],\n        [48, 30, 52],\n        [52, 87, 48]\n      ],\n      \"materialName\": \"fox:orange_mid_2\"\n    }\n  ]\n}\n", "module.exports = perspective;\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspective(out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};", "module.exports = multiply;\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};", "module.exports = identity;\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};", "var identity = require('./identity');\n\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < 0.000001 &&\n        Math.abs(eyey - centery) < 0.000001 &&\n        Math.abs(eyez - centerz) < 0.000001) {\n        return identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};", "module.exports = invert;\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};", "module.exports = rotate;\n\n/**\n * Rotates a mat4 by the given angle\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction rotate(out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < 0.000001) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};", "module.exports = transformMat4;\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat4(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15]\n    w = w || 1.0\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w\n    return out\n}", "const perspective = require('gl-mat4/perspective');\nconst multiply = require('gl-mat4/multiply');\nconst lookAt = require('gl-mat4/lookAt');\nconst invert = require('gl-mat4/invert');\nconst rotate = require('gl-mat4/rotate');\nconst transform = require('gl-vec3/transformMat4');\n\nconst SVG_NS = 'http://www.w3.org/2000/svg';\n\nconst defaultCameraDistance = 400;\n\n// Taken from https://github.com/yuzhe-han/ParentNode-replaceChildren\n// This is to support browsers that do not yet support `replaceChildren`\nconst replaceChildrenPonyfill = function (...addNodes) {\n  while (this.lastChild) {\n    this.removeChild(this.lastChild);\n  }\n\n  if (addNodes.length > 0) {\n    this.append(...addNodes);\n  }\n};\n\nmodule.exports = {\n  calculateSizingOptions,\n  createLogoViewer,\n  createModelRenderer,\n  defaultCameraDistance,\n  loadModelFromJson,\n  positionsFromModel,\n  createPolygonsFromModelJson,\n  createStandardModelPolygon,\n  createMatrixComputer,\n  compareZ,\n  createFaceUpdater,\n  createNode,\n  setAttribute,\n  setGradientDefinitions,\n  setMaskDefinitions,\n  svgElementToSvgImageContent,\n  Polygon,\n};\n\n/**\n * A distance measurement used for SVG attributes. A length is specified as a number followed by a\n * unit identifier.\n *\n * See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Content_type#length} for further\n * information.\n *\n * @typedef {`${number}${'em' | 'ex' | 'px' | 'in' | 'cm' | 'mm' | 'pt' | 'pc' | '%'}`} SvgLength\n */\n\n/**\n * A definition for a `<stop>` SVG element, which defines a color and the position for that color\n * on a gradient. This element is always a child of either a `<linearGradient>` or\n * `<radialGradient>` element.\n *\n * See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/stop} for more information\n * about the `<stop>` element.\n *\n * @typedef {object} StopDefinition\n * @property {number | `${number}%`} [offset] - The location of the gradient stop along the\n * gradient vector.\n * @property {string} [stop-color] - The color of the gradient stop. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/stop}.\n * @property {number} [stop-opacity] - The opacity of the gradient stop. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stop-opacity}.\n */\n\n/**\n * A definition for a `<linearGradient>` SVG element. This definition includes all supported\n * `<linearGradient>` attributes, and it includes a `stops` property which is an array of\n * definitions for each `<stop>` child node.\n *\n * See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient} for more\n * information about the `<linearGradient>` element.\n *\n * @typedef {object} LinearGradientDefinition\n * @property {string} [gradientTransform] - A transform from the gradient coordinate system to the\n * target coordinate system. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/gradientTransform}.\n * @property {'userSpaceOnUse' | 'objectBoundingBox'} [gradientUnits] - The coordinate system used.\n * for the coordinate attributes. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/gradientUnits}.\n * @property {'pad' | 'reflect' | 'repeat'} [spreadMethod] - The method used to fill a shape beyond\n * the defined edges of a gradient. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/spreadMethod}.\n * @property {StopDefinition[]} [stops] - The colors of the gradient, and the position of each\n * color along the gradient vector.\n * @property {'linear'} type - The type of the gradient.\n * @property {SvgLength} [x1] - The x coordinate of the starting point of the vector gradient.\n * @property {SvgLength} [x2] - The x coordinate of the ending point of the vector gradient.\n * @property {SvgLength} [y1] - The y coordinate of the starting point of the vector gradient.\n * @property {SvgLength} [y2] - The y coordinate of the ending point of the vector gradient.\n */\n\n/**\n * A definition for a `<radialGradient>` SVG element. This definition includes all supported\n * `<radialGradient>` attributes, and it includes a `stops` property which is an array of\n * definitions for each `<stop>` child node.\n *\n * See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Element/radialGradient} for more\n * information about the `<radialGradient>` element.\n *\n * @typedef {object} RadialGradientDefinition\n * @property {SvgLength} [cx] - The x coordinate of the end circle of the radial gradiant.\n * @property {SvgLength} [cy] - The y coordinate of the end circle of the radial gradient.\n * @property {SvgLength} [fr] - The radius of the start circle of the radial gradient.\n * @property {SvgLength} [fx] - The x coordinate of the start circle of the radial gradient.\n * @property {SvgLength} [fy] - The y coordinate of the start circle of the radial gradient.\n * @property {string} [gradientTransform] - A transform from the gradient coordinate system to the\n * target coordinate system. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/gradientTransform}.\n * @property {'userSpaceOnUse' | 'objectBoundingBox'} [gradientUnits] - The coordinate system used\n * for the coordinate attributes. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/gradientUnits}.\n * @property {SvgLength} [r] - The radius of the end circle of the radial gradient.\n * @property {'pad' | 'reflect' | 'repeat'} [spreadMethod] - The method used to fill a shape beyond\n * the defined edges of a gradient. See {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/spreadMethod}.\n * @property {StopDefinition[]} [stops] - The colors of the gradient, and the position of each\n * color along the gradient vector.\n * @property {'radial'} type - The type of the gradient.\n */\n\n/**\n * A color, specified as three numbers (RGB) where each number is between 0-255 (inclusive).\n *\n * @typedef {[number, number, number]} RgbColor\n */\n\n/**\n * Three vertex indices, representing the vertices of a single three-sided polygon. Each vertex\n * index corresponds to the index of the vertex in the `positions` array of {@link ModelJson}.\n *\n * @typedef {[number, number, number]} PolygonVertices\n */\n\n/**\n * A JSON specification for a set of polygons with the same color/texture.\n *\n * @typedef {object} ChunkJson\n * @property {RgbColor} color - The color of the current chunk, specified as RGB.\n * values (from 0-255 inclusive).\n * @property {PolygonVertices[]} faces - A collection of polygon vertices.\n * @property {string} [mask] - The ID of the mask to apply to this chunk.\n */\n\n/**\n * The properties of a single SVG mask.\n *\n * @typedef MaskDefinition\n * @property {string} color - The color or gradient to apply to the mask.\n */\n\n/**\n * A JSON specification for the logo model.\n *\n * @typedef {object} ModelJson\n * @property {[number, number, number][]} positions - A list of vertex positions. Each entry includes\n * an X, Y, and X coordinate for a single vertex.\n * @property {ChunkJson[]} chunks - Sets of polygons with the same color/texture.\n * @property {Record<string, MaskDefinition>} [masks] - Mask definitions.\n */\n\n/**\n * The width and height of the SVG container.\n *\n * @typedef {object} SvgSize\n * @property {number} width - The width of the SVG container.\n * @property {number} height - The height of the SVG container.\n */\n\n/**\n * This object contains a reference to the SVG element where the logo is rendered, and it includes\n * a set of functions for controlling the logo animation.\n *\n * @typedef {object} LogoViewer\n * @property {SVGSVGElement} container - The SVG element containing the animation.\n * @property {(target: [number, number]) => void} lookAt - Update the model to look at the given\n * target.\n * @property {(followMouse: boolean) => void} setFollowMouse - Set the `followMouse` option.\n * @property {(followMotion: boolean) => void} setFollowMotion - Set the `followMotion` option.\n * @property {() => void} startAnimation - Start the animation.\n * @property {() => void} stopAnimation - Stop the animation.\n * @property {(target: [number, number]) => void} lookAtAndRender - Update the model to look at the\n * given target, and manually trigger the animation to be rendered.\n * @property {() => void} renderCurrentScene - Render the animation manually. This can be useful if\n * `lazyRender` is enabled, and some model change happens outside of mouse/device movement.\n */\n\n/**\n * Create an animated logo and return a set of functions for controlling the animation.\n *\n * @param {SVGSVGElement} container - The SVG element to render within.\n * @param {(lookCurrent: [number, number], slowDrift: boolean) => void} renderScene - A function\n * that renders the model.\n * @param {object} options - Options.\n * @param {boolean} [options.followMouse] - The model looks at the mouse.\n * @param {boolean} [options.followMotion] - The model moves in response to device movement.\n * @param {boolean} [options.slowDrift] - The model slowly rotates.\n * @param {boolean} [options.lazyRender] - Determines whether to render each animation frame, or\n * just when requested (e.g. by mouse/device movement).\n * @returns {LogoViewer} A collection of functions for controlling the animation.\n */\nfunction createLogoViewer(\n  container,\n  renderScene,\n  {\n    followMouse = false,\n    followMotion = false,\n    slowDrift = false,\n    lazyRender = true,\n  } = {},\n) {\n  let shouldRender = true;\n  const mouse = {\n    x: 0,\n    y: 0,\n  };\n  const lookCurrent = [0, 0];\n  const lookRate = 0.3;\n\n  // closes over scene state\n  const renderCurrentScene = () => {\n    updateLookCurrent();\n    renderScene(lookCurrent, slowDrift);\n  };\n\n  function setLookAtTarget(target) {\n    const bounds = container.getBoundingClientRect();\n    mouse.x = 1.0 - (2.0 * (target.x - bounds.left)) / bounds.width;\n    mouse.y = 1.0 - (2.0 * (target.y - bounds.top)) / bounds.height;\n  }\n\n  function stopAnimation() {\n    shouldRender = false;\n  }\n\n  function startAnimation() {\n    shouldRender = true;\n  }\n\n  function setFollowMouse(state) {\n    // eslint-disable-next-line no-param-reassign\n    followMouse = state;\n  }\n\n  function setFollowMotion(state) {\n    // eslint-disable-next-line no-param-reassign\n    followMotion = state;\n  }\n\n  window.addEventListener('mousemove', function (ev) {\n    if (!shouldRender) {\n      startAnimation();\n    }\n\n    if (followMouse) {\n      setLookAtTarget({\n        x: ev.clientX,\n        y: ev.clientY,\n      });\n      renderCurrentScene();\n    }\n  });\n\n  window.addEventListener('deviceorientation', function (event) {\n    if (!shouldRender) {\n      startAnimation();\n    }\n\n    if (followMotion) {\n      // gamma: left to right\n      const leftToRight = event.gamma;\n      // beta: front back motion\n      const frontToBack = event.beta;\n      // x offset: needed to correct the intial position\n      const xOffset = 200;\n      // y offset: needed to correct the intial position\n      const yOffset = -300;\n      // acceleration\n      const acceleration = 10;\n\n      setLookAtTarget({\n        x: xOffset + leftToRight * acceleration,\n        y: yOffset + frontToBack * acceleration,\n      });\n      renderCurrentScene();\n    }\n  });\n\n  function lookAtAndRender(target) {\n    // update look target\n    setLookAtTarget(target);\n    // this should prolly just call updateLookCurrent or set lookCurrent values to eaxactly lookTarget\n    // but im not really sure why its different, so im leaving it alone\n    lookCurrent[0] = mouse.x;\n    lookCurrent[1] = mouse.y + 0.085 / lookRate;\n    renderCurrentScene();\n  }\n\n  function renderLoop() {\n    if (!shouldRender) {\n      return;\n    }\n    window.requestAnimationFrame(renderLoop);\n    renderCurrentScene();\n  }\n\n  function updateLookCurrent() {\n    const li = 1.0 - lookRate;\n    lookCurrent[0] = li * lookCurrent[0] + lookRate * mouse.x;\n    lookCurrent[1] = li * lookCurrent[1] + lookRate * mouse.y + 0.085;\n  }\n\n  if (lazyRender) {\n    renderCurrentScene();\n  } else {\n    renderLoop();\n  }\n\n  return {\n    container,\n    lookAt: setLookAtTarget,\n    setFollowMouse,\n    setFollowMotion,\n    stopAnimation,\n    startAnimation,\n    lookAtAndRender,\n    renderCurrentScene,\n  };\n}\n\n/**\n * An object representing the model.\n *\n * @typedef {object} ModelObject\n * @property {(M: Float32Array) => void} updatePositions - A function that updates model vertex\n * positions with the given set of transformations.\n * @property {Float32Array} positions - All vertex position coordinates. Each vertex position is\n * stored in this array as adjacent X, Y, Z coordinates.\n * @property {Float32Array} transformed - Transformations to be applied to each vertex position\n * coordinate on render.\n * @property {Polygon[]} polygons - A list of all model polygons.\n * @property {Polygon[][]} polygonsByChunk - A list of all model polygons, sorted by chunk.\n */\n\n/**\n * Load the model object from the model JSON specification.\n *\n * @param {ModelJson} modelJson - The model JSON specification.\n * @param {typeof createStandardModelPolygon} [createSvgPolygon] - A function for creating an SVG\n * polygon node.\n * @returns {ModelObject} The model object.\n */\nfunction loadModelFromJson(\n  modelJson,\n  createSvgPolygon = createStandardModelPolygon,\n) {\n  const vertCount = modelJson.positions.length;\n  const positions = new Float32Array(3 * vertCount);\n  const transformed = new Float32Array(3 * vertCount);\n  const { polygons, polygonsByChunk } = createPolygonsFromModelJson(\n    modelJson,\n    createSvgPolygon,\n  );\n  positionsFromModel(positions, modelJson);\n  const updatePositions = createPositionUpdater(\n    positions,\n    transformed,\n    vertCount,\n  );\n  const modelObj = {\n    updatePositions,\n    positions,\n    transformed,\n    polygons,\n    polygonsByChunk,\n  };\n  return modelObj;\n}\n\n/**\n * Create a model renderer.\n *\n * @param {SVGSVGElement} container - The SVG element to render within.\n * @param {number} cameraDistance - The distance between the model and the camera.\n * @param {ModelObject} modelObj - The model to render.\n * @param {object} options - Options.\n * @param {number} options.verticalFieldOfView - Vertical field of view (in radians).\n * @param {number} options.near - Near bound of the frustrum.\n * @param {number} options.far - Far bound of the frustrum.\n * @returns {(rect: SvgSize, lookPos: [number, number], slowDrift: boolean) => void}\n * A function for rendering the model.\n */\nfunction createModelRenderer(\n  container,\n  cameraDistance,\n  modelObj,\n  { verticalFieldOfView, near, far },\n) {\n  const { updatePositions, transformed, polygons } = modelObj;\n\n  for (const polygon of polygons) {\n    container.appendChild(polygon.svg);\n  }\n\n  const computeMatrix = createMatrixComputer(cameraDistance, {\n    verticalFieldOfView,\n    near,\n    far,\n  });\n  const updateFaces = createFaceUpdater(container, polygons, transformed);\n\n  return (rect, lookPos, slowDrift) => {\n    const matrix = computeMatrix(rect, lookPos, slowDrift);\n    updatePositions(matrix);\n    updateFaces(rect, container, polygons, transformed);\n  };\n}\n\n/**\n * Populate vertex positions from the model JSON specification.\n *\n * @param {Float32Array} positions - The positions array to populate (this is the output).\n * @param {ModelJson} modelJson - The model JSON specification.\n */\nfunction positionsFromModel(positions, modelJson) {\n  const pp = modelJson.positions;\n  let ptr = 0;\n  for (let i = 0; i < pp.length; ++i) {\n    const p = pp[i];\n    for (let j = 0; j < 3; ++j) {\n      positions[ptr] = p[j];\n      ptr += 1;\n    }\n  }\n}\n\n/**\n * Create polygons from model.\n *\n * @param {ModelJson} modelJson - The model.\n * @param {typeof createStandardModelPolygon} createSvgPolygon - A function for creating an SVG\n * polygon node.\n * @returns {{ polygons: Polygon[], polygonsByChunk: Polygon[][]}} All model polygons, returned\n * both as a flat list, and sorted by chunk.\n */\nfunction createPolygonsFromModelJson(modelJson, createSvgPolygon) {\n  const polygons = [];\n  const polygonsByChunk = modelJson.chunks.map((chunk, index) => {\n    const { faces } = chunk;\n    return faces.map((face) => {\n      const svgPolygon = createSvgPolygon(chunk, {\n        gradients: modelJson.gradients,\n        index,\n        masks: modelJson.masks,\n      });\n      const polygon = new Polygon(svgPolygon, face);\n      polygons.push(polygon);\n      return polygon;\n    });\n  });\n  return { polygons, polygonsByChunk };\n}\n\n/**\n * Create an SVG `<polygon> element.\n *\n * This polygon is assigned the correct `fill` and `stroke` attributes, according to the chunk\n * definition provided. But the `points` attribute is always set to a dummy value, as it gets reset\n * later to the correct position during each render loop.\n *\n * @param {ChunkJson} chunk - The definition for the chunk of the model this polygon is a part of.\n * This includes the color or gradient to apply to the polygon.\n * @param {object} options - Polygon options.\n * @param {(LinearGradientDefinition | RadialGradientDefinition)[]} [options.gradients] - The set\n * of all gradient definitions used in this model.\n * @param {number} options.index - The index for the chunk this polygon is found in.\n * @param {ModelJson['masks']} [options.masks] - The set of all mask definitions.\n * @returns {SVGPolygonElement} The `<polygon>` SVG element.\n */\nfunction createStandardModelPolygon(chunk, { gradients = {}, index, masks }) {\n  const svgPolygon = createNode('polygon');\n\n  if (chunk.gradient && chunk.color) {\n    throw new Error(\n      `Both gradient and color for chunk '${index}'. These options are mutually exclusive.`,\n    );\n  } else if (chunk.gradient) {\n    const gradientId = chunk.gradient;\n    if (!gradients[gradientId]) {\n      throw new Error(`Gradient ID not found: '${gradientId}'`);\n    }\n\n    setAttribute(svgPolygon, 'fill', `url('#${gradientId}')`);\n    setAttribute(svgPolygon, 'stroke', `url('#${gradientId}')`);\n  } else {\n    const fill =\n      typeof chunk.color === 'string' ? chunk.color : `rgb(${chunk.color})`;\n    setAttribute(svgPolygon, 'fill', fill);\n    setAttribute(svgPolygon, 'stroke', fill);\n  }\n\n  if (chunk.mask) {\n    if (!masks[chunk.mask]) {\n      throw new Error(`Mask ID not found: '${chunk.mask}'`);\n    }\n    setAttribute(svgPolygon, 'mask', `url('#${chunk.mask}')`);\n  }\n\n  setAttribute(svgPolygon, 'points', '0,0, 10,0, 0,10');\n  return svgPolygon;\n}\n\n/**\n * Create function for computing transformation matrix for rendering. This transformation matrix\n * renders the model at the given distance from the camera, and it adjusts the model to look at\n * the given position on each render.\n *\n * @param {number} distance - The distance between the model and the camera\n * @param {object} options - Options.\n * @param {number} options.verticalFieldOfView - Vertical field of view (in radians).\n * @param {number} options.near - Near bound of the frustrum.\n * @param {number} options.far - Far bound of the frustrum.\n * @returns {(rect: SvgSize, lookPos: [number, number], slowDrift: boolean) => Float32Array} A\n * function for computing the transformation matrix.\n */\nfunction createMatrixComputer(distance, { verticalFieldOfView, near, far }) {\n  const objectCenter = new Float32Array(3);\n  const up = new Float32Array([0, 1, 0]);\n  const projection = new Float32Array(16);\n  const model = new Float32Array(16);\n  const view = lookAt(\n    new Float32Array(16),\n    new Float32Array([0, 0, distance]),\n    objectCenter,\n    up,\n  );\n  const invView = invert(new Float32Array(16), view);\n  const invProjection = new Float32Array(16);\n  const target = new Float32Array(3);\n  const transformedMatrix = new Float32Array(16);\n\n  const X = new Float32Array([1, 0, 0]);\n  const Y = new Float32Array([0, 1, 0]);\n  const Z = new Float32Array([0, 0, 1]);\n\n  return (rect, lookPos, slowDrift) => {\n    const viewportWidth = rect.width;\n    const viewportHeight = rect.height;\n    perspective(\n      projection,\n      verticalFieldOfView,\n      viewportWidth / viewportHeight,\n      near,\n      far,\n    );\n    invert(invProjection, projection);\n    target[0] = lookPos[0];\n    target[1] = lookPos[1];\n    target[2] = 1.2;\n    transform(target, target, invProjection);\n    transform(target, target, invView);\n    lookAt(model, objectCenter, target, up);\n\n    // this shouldnt operate directly on the matrix/model,\n    // it should likely operate on the lookPos\n    // if we do want to operate on the matrix/model, it shouldnt happen here\n    if (slowDrift) {\n      const time = Date.now() / 1000.0;\n      rotate(model, model, 0.1 + Math.sin(time / 3) * 0.2, X);\n      rotate(model, model, -0.1 + Math.sin(time / 2) * 0.03, Z);\n      rotate(model, model, 0.5 + Math.sin(time / 3) * 0.2, Y);\n    }\n\n    multiply(transformedMatrix, projection, view);\n    multiply(transformedMatrix, transformedMatrix, model);\n\n    return transformedMatrix;\n  };\n}\n\n/**\n * Create a function that updates the positions of each vertex.\n *\n * @param {number[]} positions - Vertex positions.\n * @param {number[]} transformed - Vertex transformations (this is the output of the returned\n * function).\n * @param {number} vertCount - The number of vertices.\n * @returns {(M: Float32Array) => void} A function that updates vertex positions.\n */\nfunction createPositionUpdater(positions, transformed, vertCount) {\n  return (M) => {\n    const m00 = M[0];\n    const m01 = M[1];\n    const m02 = M[2];\n    const m03 = M[3];\n    const m10 = M[4];\n    const m11 = M[5];\n    const m12 = M[6];\n    const m13 = M[7];\n    const m20 = M[8];\n    const m21 = M[9];\n    const m22 = M[10];\n    const m23 = M[11];\n    const m30 = M[12];\n    const m31 = M[13];\n    const m32 = M[14];\n    const m33 = M[15];\n\n    for (let i = 0; i < vertCount; ++i) {\n      const x = positions[3 * i];\n      const y = positions[3 * i + 1];\n      const z = positions[3 * i + 2];\n\n      const tw = x * m03 + y * m13 + z * m23 + m33;\n      transformed[3 * i] = (x * m00 + y * m10 + z * m20 + m30) / tw;\n      transformed[3 * i + 1] = (x * m01 + y * m11 + z * m21 + m31) / tw;\n      transformed[3 * i + 2] = (x * m02 + y * m12 + z * m22 + m32) / tw;\n    }\n  };\n}\n\n/**\n * A sort comparison function for comparing the z-index of two polygons.\n *\n * @param {Polygon} a - The first polygon.\n * @param {Polygon} b - The second polygon.\n * @returns {number} A number indicating whether the sort order should change; a positive number\n * indicates that b comes first.\n */\nfunction compareZ(a, b) {\n  return b.zIndex - a.zIndex;\n}\n\n/**\n * Create a function for updating positions of each polygon.\n *\n * @param {SVGSVGElement} container - The SVG element that the model is rendered within.\n * @param {Polygon[]} polygons - The polygons to update.\n * @param {number[]} transformed - Vertex transformations.\n * @returns {(rect: SvgSize) => void} A function that updates the position of each polygon in the\n * model.\n */\nfunction createFaceUpdater(container, polygons, transformed) {\n  const toDraw = [];\n  return (rect) => {\n    let i;\n    const w = rect.width;\n    const h = rect.height;\n    toDraw.length = 0;\n    for (i = 0; i < polygons.length; ++i) {\n      const poly = polygons[i];\n      const { indices } = poly;\n\n      const i0 = indices[0];\n      const i1 = indices[1];\n      const i2 = indices[2];\n      const ax = transformed[3 * i0];\n      const ay = transformed[3 * i0 + 1];\n      const bx = transformed[3 * i1];\n      const by = transformed[3 * i1 + 1];\n      const cx = transformed[3 * i2];\n      const cy = transformed[3 * i2 + 1];\n      const det = (bx - ax) * (cy - ay) - (by - ay) * (cx - ax);\n      if (det < 0) {\n        continue;\n      }\n\n      const points = [];\n      let zmax = -Infinity;\n      let zmin = Infinity;\n      const element = poly.svg;\n      for (let j = 0; j < 3; ++j) {\n        const idx = indices[j];\n        points.push(\n          `${0.5 * w * (1.0 - transformed[3 * idx])},${\n            0.5 * h * (1.0 - transformed[3 * idx + 1])\n          }`,\n        );\n        const z = transformed[3 * idx + 2];\n        zmax = Math.max(zmax, z);\n        zmin = Math.min(zmin, z);\n      }\n      poly.zIndex = zmax + 0.25 * zmin;\n      const joinedPoints = points.join(' ');\n\n      if (joinedPoints.indexOf('NaN') === -1) {\n        setAttribute(element, 'points', joinedPoints);\n      }\n\n      toDraw.push(poly);\n    }\n    toDraw.sort(compareZ);\n\n    const newPolygons = toDraw.map((poly) => poly.svg);\n    const defs = container.getElementsByTagName('defs');\n    const maskChildren = container.getElementsByTagName('mask');\n    if (container.replaceChildren) {\n      container.replaceChildren(...defs, ...maskChildren, ...newPolygons);\n    } else {\n      replaceChildrenPonyfill.bind(container)(\n        ...defs,\n        ...maskChildren,\n        ...newPolygons,\n      );\n    }\n  };\n}\n\n/**\n * Calculate wigth and height of SVG. Width and height can be specified either as a ratio of window\n * size, or in pixels.\n *\n * @param {object} [options] - Options.\n * @param {number} [options.width] - Width, either in pixels or as a ratio of window width.\n * @param {number} [options.height] - Height, either in pixels or as a ratio of window height.\n * @param {number} [options.minWidth] - Minimum width (in pixels), used as a lower bound if the\n * width is specified as a ratio.\n * @param {boolean} [options.pxNotRatio] - True indicates the width and height are in pixels, false\n * indicates they are a ratio.\n * @returns {SvgSize} Calculated width and height.\n */\nfunction calculateSizingOptions(options = {}) {\n  let width = options.width || 400;\n  let height = options.height || 400;\n\n  if (!options.pxNotRatio) {\n    width = Math.floor(window.innerWidth * (options.width || 0.25));\n    height = Math.floor(window.innerHeight * options.height || width);\n\n    if ('minWidth' in options && width < options.minWidth) {\n      width = options.minWidth;\n      height = Math.floor((options.minWidth * options.height) / options.width);\n    }\n  }\n  return { width, height };\n}\n\n/**\n * Create SVG node.\n *\n * @param {keyof SVGElementEventMap} type - The SVG node type.\n * @returns {SVGElement} The created SVG node.\n */\nfunction createNode(type) {\n  return document.createElementNS(SVG_NS, type);\n}\n\n/**\n * Set an attribute on the given SVG node.\n *\n * @param {SVGElement} node - The SVG node.\n * @param {string} attribute - The name of the attribute to set.\n * @param {unknown} value - The attribute value to set.\n */\nfunction setAttribute(node, attribute, value) {\n  node.setAttributeNS(null, attribute, value);\n}\n\n/**\n * Capture the given SVG element as a string.\n *\n * @param {SVGSVGElement} svgElement - The SVG element to capture.\n * @returns {string} A snapshot of the SVG.\n */\nfunction svgElementToSvgImageContent(svgElement) {\n  const inner = svgElement.innerHTML;\n  const head =\n    `<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"> ` +\n    `<svg width=\"521px\" height=\"521px\" version=\"1.1\" baseProfile=\"full\" xmlns=\"${SVG_NS}\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:ev=\"http://www.w3.org/2001/xml-events\">`;\n  const foot = '</svg>';\n  const content = head + inner + foot;\n  return content;\n}\n\n/**\n * A three-sided polygon.\n *\n * @param {SVGPolygonElement} svg - The SVG polygon element.\n * @param {[number, number, number]} indices - The indices of each vertex of the polygon.\n */\nfunction Polygon(svg, indices) {\n  this.svg = svg;\n  this.indices = indices;\n  this.zIndex = 0;\n}\n\n/**\n * Parse gradient definitions and construct them in the DOM.\n *\n * Both `<linearGradient>` and `<radialGradient>` are supported. All gradients get added to a\n * `<defs>` element that is added as a direct child of the container element.\n *\n * @param {SVGSVGElement} container - The `<svg>` HTML element that the definitions should be added\n * to.\n * @param {(LinearGradientDefinition | RadialGradientDefinition)[]} [gradients] - The gradient\n * definitions.\n */\nfunction setGradientDefinitions(container, gradients) {\n  if (!gradients || Object.keys(gradients).length === 0) {\n    return;\n  }\n\n  const defsContainer = createNode('defs');\n\n  const linearCoordinateAttributes = ['x1', 'x2', 'y1', 'y2'];\n  const radialCoordinateAttributes = ['cx', 'cy', 'fr', 'fx', 'fy', 'r'];\n  const commonAttributes = [\n    'gradientTransform',\n    'gradientUnits',\n    'spreadMethod',\n    'stops',\n    'type',\n  ];\n  const allLinearAttributes = [\n    ...linearCoordinateAttributes,\n    ...commonAttributes,\n  ];\n  const allRadialAttributes = [\n    ...radialCoordinateAttributes,\n    ...commonAttributes,\n  ];\n\n  for (const [gradientId, gradientDefinition] of Object.entries(gradients)) {\n    let gradient;\n    if (gradientDefinition.type === 'linear') {\n      gradient = createNode('linearGradient');\n\n      const unsupportedLinearAttribute = Object.keys(gradientDefinition).find(\n        (attribute) => !allLinearAttributes.includes(attribute),\n      );\n      if (unsupportedLinearAttribute) {\n        throw new Error(\n          `Unsupported linear gradient attribute: '${unsupportedLinearAttribute}'`,\n        );\n      } else if (\n        linearCoordinateAttributes.some(\n          (attributeName) => gradientDefinition[attributeName] !== undefined,\n        )\n      ) {\n        const missingAttributes = linearCoordinateAttributes.filter(\n          (attributeName) => gradientDefinition[attributeName] === undefined,\n        );\n        if (missingAttributes.length > 0) {\n          throw new Error(\n            `Missing coordinate attributes: '${missingAttributes.join(', ')}'`,\n          );\n        }\n\n        for (const attribute of linearCoordinateAttributes) {\n          if (typeof gradientDefinition[attribute] !== 'string') {\n            throw new Error(\n              `Type of '${attribute}' option expected to be 'string'. Instead received type '${typeof gradientDefinition[\n                attribute\n              ]}'`,\n            );\n          }\n          setAttribute(gradient, attribute, gradientDefinition[attribute]);\n        }\n      }\n    } else if (gradientDefinition.type === 'radial') {\n      gradient = createNode('radialGradient');\n\n      const presentCoordinateAttributes = radialCoordinateAttributes.filter(\n        (attributeName) => gradientDefinition[attributeName] !== undefined,\n      );\n      const unsupportedRadialAttribute = Object.keys(gradientDefinition).find(\n        (attribute) => !allRadialAttributes.includes(attribute),\n      );\n      if (unsupportedRadialAttribute) {\n        throw new Error(\n          `Unsupported radial gradient attribute: '${unsupportedRadialAttribute}'`,\n        );\n      } else if (presentCoordinateAttributes.length > 0) {\n        for (const attribute of presentCoordinateAttributes) {\n          if (typeof gradientDefinition[attribute] !== 'string') {\n            throw new Error(\n              `Type of '${attribute}' option expected to be 'string'. Instead received type '${typeof gradientDefinition[\n                attribute\n              ]}'`,\n            );\n          }\n          setAttribute(gradient, attribute, gradientDefinition[attribute]);\n        }\n      }\n    } else {\n      throw new Error(\n        `Unsupported gradient type: '${gradientDefinition.type}'`,\n      );\n    }\n\n    // Set common attributes\n    setAttribute(gradient, 'id', gradientId);\n    if (gradientDefinition.gradientUnits !== undefined) {\n      if (\n        !['userSpaceOnUse', 'objectBoundingBox'].includes(\n          gradientDefinition.gradientUnits,\n        )\n      ) {\n        throw new Error(\n          `Unrecognized value for 'gradientUnits' attribute: '${gradientDefinition.gradientUnits}'`,\n        );\n      }\n      setAttribute(gradient, 'gradientUnits', gradientDefinition.gradientUnits);\n    }\n\n    if (gradientDefinition.gradientTransform !== undefined) {\n      if (typeof gradientDefinition.gradientTransform !== 'string') {\n        throw new Error(\n          `Type of 'gradientTransform' option expected to be 'string'. Instead received type '${typeof gradientDefinition.gradientTransform}'`,\n        );\n      }\n\n      setAttribute(\n        gradient,\n        'gradientTransform',\n        gradientDefinition.gradientTransform,\n      );\n    }\n\n    if (gradientDefinition.spreadMethod !== undefined) {\n      if (\n        !['pad', 'reflect', 'repeat'].includes(gradientDefinition.spreadMethod)\n      ) {\n        throw new Error(\n          `Unrecognized value for 'spreadMethod' attribute: '${gradientDefinition.spreadMethod}'`,\n        );\n      }\n      setAttribute(gradient, 'spreadMethod', gradientDefinition.spreadMethod);\n    }\n\n    if (gradientDefinition.stops !== undefined) {\n      if (!Array.isArray(gradientDefinition.stops)) {\n        throw new Error(`The 'stop' attribute must be an array`);\n      }\n\n      for (const stopDefinition of gradientDefinition.stops) {\n        if (typeof stopDefinition !== 'object') {\n          throw new Error(\n            `Each entry in the 'stop' attribute must be an object. Instead received type '${typeof stopDefinition}'`,\n          );\n        }\n        const stop = createNode('stop');\n\n        if (stopDefinition.offset !== undefined) {\n          setAttribute(stop, 'offset', stopDefinition.offset);\n        }\n\n        if (stopDefinition['stop-color'] !== undefined) {\n          setAttribute(stop, 'stop-color', stopDefinition['stop-color']);\n        }\n\n        if (stopDefinition['stop-opacity'] !== undefined) {\n          setAttribute(stop, 'stop-opacity', stopDefinition['stop-opacity']);\n        }\n\n        gradient.appendChild(stop);\n      }\n    }\n\n    defsContainer.appendChild(gradient);\n  }\n\n  container.appendChild(defsContainer);\n}\n\n/**\n * Parse mask definitions and construct them in the DOM.\n *\n * The `<mask>` element contains a single rectangle that should cover the full extent of the SVG\n * model. The color of this rectangle can be set to single color or a gradient. Anything the mask\n * is applied to will be invisible if under a black pixel, visible if under a white pixel, and\n * partially translucent if under a pixel that is between white and black.\n *\n * Later this could be extended to include custom paths and other shapes, rather than just a single\n * rectangle.\n *\n * @param options - The mask options.\n * @param {SVGSVGElement} options.container - The `<svg>` HTML element that the mask should be added\n * to.\n * @param {ModelJson['masks']} [options.masks] - The gradient definitions.\n * @param {number} options.height - The height of the SVG container.\n * @param {number} options.width - The width of the SVG container.\n */\nfunction setMaskDefinitions({ container, masks, height, width }) {\n  if (!masks || Object.keys(masks).length === 0) {\n    return;\n  }\n\n  for (const [maskId, maskDefinition] of Object.entries(masks)) {\n    const mask = createNode('mask');\n    setAttribute(mask, 'id', maskId);\n\n    const maskedRect = createNode('rect');\n\n    // Extend mask beyond container to ensure it completely covers the model.\n    // The model can extend beyond the container as well.\n    setAttribute(maskedRect, 'width', width * 1.5);\n    setAttribute(maskedRect, 'height', height * 1.5);\n    setAttribute(maskedRect, 'x', `-${Math.floor(width / 4)}`);\n    setAttribute(maskedRect, 'y', `-${Math.floor(height / 4)}`);\n\n    setAttribute(maskedRect, 'fill', maskDefinition.color);\n    mask.appendChild(maskedRect);\n\n    container.appendChild(mask);\n  }\n}\n", "const foxJson = require('../data/fox.json');\nconst {\n  calculateSizingOptions,\n  createLogoViewer,\n  defaultCameraDistance,\n  loadModelFromJson,\n  createModelRenderer,\n  createNode,\n  setAttribute,\n  setGradientDefinitions,\n  setMaskDefinitions,\n} = require('./util');\n\nmodule.exports = createLogo;\n\n/**\n * Create an animated SVG logo.\n *\n * The size defaults to 25% of the screen size, or 400x400px if `pxNotRatio` is true.\n *\n * @param {object} [options] - Options.\n * @param {ModelJson} [options.meshJson] - The 3D model.\n * @param {boolean} [options.followMouse] - The model looks at the mouse.\n * @param {boolean} [options.followMotion] - The model moves in response to device movement.\n * @param {boolean} [options.slowDrift] - The model slowly rotates.\n * @param {boolean} [options.lazyRender] - Determines whether to render each animation frame, or\n * just when requested (e.g. by mouse/device movement).\n * @param {number} [options.cameraDistance] - The distance between the model and the camera.\n * @param {number} [options.verticalFieldOfView] - Vertical field of view (in radians).\n * @param {number} [options.near] - Near bound of the frustrum.\n * @param {number} [options.far] - Far bound of the frustrum.\n * @param {number} [options.width] - Width, either in pixels or as a ratio of window width.\n * @param {number} [options.height] - Height, either in pixels or as a ratio of window height.\n * @param {number} [options.minWidth] - Minimum width (in pixels), used as a lower bound if the\n * width is specified as a ratio.\n * @param {boolean} [options.pxNotRatio] - True indicates the width and height are in pixels, false\n * indicates they are a ratio.\n * @returns {LogoViewer} An animated SVG logo.\n */\nfunction createLogo({\n  meshJson = foxJson,\n  // animation options\n  followMouse = false,\n  followMotion = false,\n  slowDrift = false,\n  // render options\n  lazyRender = true,\n  cameraDistance = defaultCameraDistance,\n  verticalFieldOfView = Math.PI / 4.0,\n  near = 100,\n  far = 1000,\n  // size options\n  width: specifiedWidth,\n  height: specifiedHeight,\n  minWidth,\n  pxNotRatio = false,\n} = {}) {\n  const { height, width } = calculateSizingOptions({\n    width: specifiedWidth,\n    height: specifiedHeight,\n    minWidth,\n    pxNotRatio,\n  });\n\n  const container = createNode('svg');\n  setAttribute(container, 'width', `${width}px`);\n  setAttribute(container, 'height', `${height}px`);\n  document.body.appendChild(container);\n\n  setGradientDefinitions(container, meshJson.gradients);\n  setMaskDefinitions({ container, masks: meshJson.masks, height, width });\n\n  const modelObj = loadModelFromJson(meshJson);\n  const renderFox = createModelRenderer(container, cameraDistance, modelObj, {\n    verticalFieldOfView,\n    near,\n    far,\n  });\n  const renderScene = (lookCurrent, _slowDrift) => {\n    const rect = container.getBoundingClientRect();\n    renderFox(rect, lookCurrent, _slowDrift);\n  };\n\n  return createLogoViewer(container, renderScene, {\n    cameraDistance,\n    followMouse,\n    followMotion,\n    lazyRender,\n    slowDrift,\n  });\n}\n"],
  "mappings": "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",
  "names": []
}
